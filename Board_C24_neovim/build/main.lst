ARM GAS  /tmp/ccU8bNwg.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Src/main.c"
  18              		.section	.text.Error_Handler,"ax",%progbits
  19              		.align	1
  20              		.global	Error_Handler
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	Error_Handler:
  26              	.LFB70:
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * Copyright (c) 2024 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Src/main.c    ****   * in the root directory of this software component.
  14:Src/main.c    ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Src/main.c    ****   *
  16:Src/main.c    ****   ******************************************************************************
  17:Src/main.c    ****   */
  18:Src/main.c    **** /* USER CODE END Header */
  19:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  20:Src/main.c    **** #include "main.h"
  21:Src/main.c    **** #include "i2c.h"
  22:Src/main.c    **** #include "stm32f1xx_hal_tim.h"
  23:Src/main.c    **** #include "tim.h"
  24:Src/main.c    **** #include "usart.h"
  25:Src/main.c    **** #include "gpio.h"
  26:Src/main.c    **** 
  27:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  28:Src/main.c    **** /* USER CODE BEGIN Includes */
  29:Src/main.c    **** #include<stdio.h>
  30:Src/main.c    **** #include<stdint.h>
  31:Src/main.c    **** #include<string.h>
  32:Src/main.c    **** #include "ds1307_for_stm32_hal.h"
ARM GAS  /tmp/ccU8bNwg.s 			page 2


  33:Src/main.c    **** #include "mpu6050.h" 
  34:Src/main.c    **** #include "test.h"
  35:Src/main.c    **** /* USER CODE END Includes */
  36:Src/main.c    **** 
  37:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  38:Src/main.c    **** /* USER CODE BEGIN PTD */
  39:Src/main.c    **** 
  40:Src/main.c    **** /* USER CODE END PTD */
  41:Src/main.c    **** 
  42:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  43:Src/main.c    **** /* USER CODE BEGIN PD */
  44:Src/main.c    **** 
  45:Src/main.c    **** /* USER CODE END PD */
  46:Src/main.c    **** 
  47:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  48:Src/main.c    **** /* USER CODE BEGIN PM */
  49:Src/main.c    **** 
  50:Src/main.c    **** /* USER CODE END PM */
  51:Src/main.c    **** 
  52:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  53:Src/main.c    **** 
  54:Src/main.c    **** /* USER CODE BEGIN PV */
  55:Src/main.c    **** 
  56:Src/main.c    **** /* USER CODE END PV */
  57:Src/main.c    **** 
  58:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  59:Src/main.c    **** void SystemClock_Config(void);
  60:Src/main.c    **** /* USER CODE BEGIN PFP */
  61:Src/main.c    **** 
  62:Src/main.c    **** /* USER CODE END PFP */
  63:Src/main.c    **** 
  64:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  65:Src/main.c    **** /* USER CODE BEGIN 0 */
  66:Src/main.c    **** 
  67:Src/main.c    **** /* USER CODE END 0 */
  68:Src/main.c    **** 
  69:Src/main.c    **** /**
  70:Src/main.c    ****   * @brief  The application entry point.
  71:Src/main.c    ****   * @retval int
  72:Src/main.c    ****   */
  73:Src/main.c    **** int main(void)
  74:Src/main.c    **** {
  75:Src/main.c    **** 
  76:Src/main.c    ****   /* USER CODE BEGIN 1 */
  77:Src/main.c    **** 
  78:Src/main.c    ****   /* USER CODE END 1 */
  79:Src/main.c    **** 
  80:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  81:Src/main.c    **** 
  82:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  83:Src/main.c    ****   HAL_Init();
  84:Src/main.c    **** 
  85:Src/main.c    ****   /* USER CODE BEGIN Init */
  86:Src/main.c    ****     /*DS1307_Init(&hi2c1);*/
  87:Src/main.c    ****   /* To test leap year correction. */
  88:Src/main.c    ****     
  89:Src/main.c    ****   /* USER CODE END Init */
ARM GAS  /tmp/ccU8bNwg.s 			page 3


  90:Src/main.c    **** 
  91:Src/main.c    ****   /* Configure the system clock */
  92:Src/main.c    ****   SystemClock_Config();
  93:Src/main.c    **** 
  94:Src/main.c    ****   /* USER CODE BEGIN SysInit */
  95:Src/main.c    **** 
  96:Src/main.c    ****   /* USER CODE END SysInit */
  97:Src/main.c    **** 
  98:Src/main.c    ****   /* Initialize all configured peripherals */
  99:Src/main.c    ****   MX_GPIO_Init();
 100:Src/main.c    ****   MX_USART1_UART_Init();
 101:Src/main.c    ****   MX_I2C1_Init();
 102:Src/main.c    ****   MX_I2C2_Init();
 103:Src/main.c    ****   MX_TIM2_Init();
 104:Src/main.c    ****   /* USER CODE BEGIN 2 */
 105:Src/main.c    ****   /*while (MPU6050_Init(&hi2c2) == 1);*/ //Uncomment when use MPU6050 
 106:Src/main.c    ****   test_init();
 107:Src/main.c    **** 	  /* USER CODE END 2 */
 108:Src/main.c    **** 
 109:Src/main.c    ****   /* Infinite loop */
 110:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 111:Src/main.c    ****   while (1)
 112:Src/main.c    ****   {
 113:Src/main.c    ****     /* USER CODE END WHILE */
 114:Src/main.c    **** 
 115:Src/main.c    ****     /* USER CODE BEGIN 3 */
 116:Src/main.c    ****       buzzer_test();
 117:Src/main.c    ****       HAL_Delay(100);
 118:Src/main.c    ****       led_test();
 119:Src/main.c    ****       HAL_Delay(100);
 120:Src/main.c    ****       button_test();
 121:Src/main.c    ****       HAL_Delay(100);
 122:Src/main.c    ****       ds1307_test();
 123:Src/main.c    ****       HAL_Delay(100);
 124:Src/main.c    ****       mpu6050_test();
 125:Src/main.c    ****       HAL_Delay(100);
 126:Src/main.c    ****   }
 127:Src/main.c    ****   /* USER CODE END 3 */
 128:Src/main.c    **** }
 129:Src/main.c    **** 
 130:Src/main.c    **** /**
 131:Src/main.c    ****   * @brief System Clock Configuration
 132:Src/main.c    ****   * @retval None
 133:Src/main.c    ****   */
 134:Src/main.c    **** void SystemClock_Config(void)
 135:Src/main.c    **** {
 136:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 137:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 138:Src/main.c    **** 
 139:Src/main.c    ****   /** Initializes the RCC Oscillators according to the specified parameters
 140:Src/main.c    ****   * in the RCC_OscInitTypeDef structure.
 141:Src/main.c    ****   */
 142:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 143:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 144:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 145:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 146:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
ARM GAS  /tmp/ccU8bNwg.s 			page 4


 147:Src/main.c    ****   {
 148:Src/main.c    ****     Error_Handler();
 149:Src/main.c    ****   }
 150:Src/main.c    **** 
 151:Src/main.c    ****   /** Initializes the CPU, AHB and APB buses clocks
 152:Src/main.c    ****   */
 153:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 154:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 155:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 156:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 157:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 158:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 159:Src/main.c    **** 
 160:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 161:Src/main.c    ****   {
 162:Src/main.c    ****     Error_Handler();
 163:Src/main.c    ****   }
 164:Src/main.c    **** }
 165:Src/main.c    **** 
 166:Src/main.c    **** /* USER CODE BEGIN 4 */
 167:Src/main.c    **** 
 168:Src/main.c    **** /* USER CODE END 4 */
 169:Src/main.c    **** 
 170:Src/main.c    **** /**
 171:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 172:Src/main.c    ****   * @retval None
 173:Src/main.c    ****   */
 174:Src/main.c    **** void Error_Handler(void)
 175:Src/main.c    **** {
  27              		.loc 1 175 1 view -0
  28              		.cfi_startproc
  29              		@ Volatile: function does not return.
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 176:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 177:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 178:Src/main.c    ****   __disable_irq();
  33              		.loc 1 178 3 view .LVU1
  34              	.LBB4:
  35              	.LBI4:
  36              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
ARM GAS  /tmp/ccU8bNwg.s 			page 5


  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
ARM GAS  /tmp/ccU8bNwg.s 			page 6


  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
ARM GAS  /tmp/ccU8bNwg.s 			page 7


 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
  37              		.loc 2 140 27 view .LVU2
  38              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  39              		.loc 2 142 3 view .LVU3
  40              		.syntax unified
  41              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  42 0000 72B6     		cpsid i
  43              	@ 0 "" 2
  44              		.thumb
  45              		.syntax unified
  46              	.L2:
  47              	.LBE5:
  48              	.LBE4:
 179:Src/main.c    ****   while (1)
  49              		.loc 1 179 3 view .LVU4
 180:Src/main.c    ****   {
 181:Src/main.c    ****   }
  50              		.loc 1 181 3 view .LVU5
 179:Src/main.c    ****   while (1)
  51              		.loc 1 179 9 view .LVU6
  52 0002 FEE7     		b	.L2
  53              		.cfi_endproc
  54              	.LFE70:
  56              		.section	.text.SystemClock_Config,"ax",%progbits
  57              		.align	1
  58              		.global	SystemClock_Config
  59              		.syntax unified
  60              		.thumb
  61              		.thumb_func
  63              	SystemClock_Config:
  64              	.LFB69:
 135:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  65              		.loc 1 135 1 view -0
  66              		.cfi_startproc
  67              		@ args = 0, pretend = 0, frame = 64
  68              		@ frame_needed = 0, uses_anonymous_args = 0
  69 0000 10B5     		push	{r4, lr}
  70              	.LCFI0:
  71              		.cfi_def_cfa_offset 8
  72              		.cfi_offset 4, -8
  73              		.cfi_offset 14, -4
  74 0002 90B0     		sub	sp, sp, #64
  75              	.LCFI1:
  76              		.cfi_def_cfa_offset 72
 136:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
ARM GAS  /tmp/ccU8bNwg.s 			page 8


  77              		.loc 1 136 3 view .LVU8
 136:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  78              		.loc 1 136 22 is_stmt 0 view .LVU9
  79 0004 06AC     		add	r4, sp, #24
  80 0006 2822     		movs	r2, #40
  81 0008 0021     		movs	r1, #0
  82 000a 2046     		mov	r0, r4
  83 000c FFF7FEFF 		bl	memset
  84              	.LVL0:
 137:Src/main.c    **** 
  85              		.loc 1 137 3 is_stmt 1 view .LVU10
 137:Src/main.c    **** 
  86              		.loc 1 137 22 is_stmt 0 view .LVU11
  87 0010 0023     		movs	r3, #0
  88 0012 0193     		str	r3, [sp, #4]
  89 0014 0293     		str	r3, [sp, #8]
  90 0016 0393     		str	r3, [sp, #12]
  91 0018 0493     		str	r3, [sp, #16]
  92 001a 0593     		str	r3, [sp, #20]
 142:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  93              		.loc 1 142 3 is_stmt 1 view .LVU12
 142:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  94              		.loc 1 142 36 is_stmt 0 view .LVU13
  95 001c 0223     		movs	r3, #2
  96 001e 0693     		str	r3, [sp, #24]
 143:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
  97              		.loc 1 143 3 is_stmt 1 view .LVU14
 143:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
  98              		.loc 1 143 30 is_stmt 0 view .LVU15
  99 0020 0123     		movs	r3, #1
 100 0022 0A93     		str	r3, [sp, #40]
 144:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 101              		.loc 1 144 3 is_stmt 1 view .LVU16
 144:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 102              		.loc 1 144 41 is_stmt 0 view .LVU17
 103 0024 1023     		movs	r3, #16
 104 0026 0B93     		str	r3, [sp, #44]
 145:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 105              		.loc 1 145 3 is_stmt 1 view .LVU18
 146:Src/main.c    ****   {
 106              		.loc 1 146 3 view .LVU19
 146:Src/main.c    ****   {
 107              		.loc 1 146 7 is_stmt 0 view .LVU20
 108 0028 2046     		mov	r0, r4
 109 002a FFF7FEFF 		bl	HAL_RCC_OscConfig
 110              	.LVL1:
 146:Src/main.c    ****   {
 111              		.loc 1 146 6 discriminator 1 view .LVU21
 112 002e 60B9     		cbnz	r0, .L7
 153:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 113              		.loc 1 153 3 is_stmt 1 view .LVU22
 153:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 114              		.loc 1 153 31 is_stmt 0 view .LVU23
 115 0030 0F23     		movs	r3, #15
 116 0032 0193     		str	r3, [sp, #4]
 155:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 117              		.loc 1 155 3 is_stmt 1 view .LVU24
ARM GAS  /tmp/ccU8bNwg.s 			page 9


 155:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 118              		.loc 1 155 34 is_stmt 0 view .LVU25
 119 0034 0021     		movs	r1, #0
 120 0036 0291     		str	r1, [sp, #8]
 156:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 121              		.loc 1 156 3 is_stmt 1 view .LVU26
 156:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 122              		.loc 1 156 35 is_stmt 0 view .LVU27
 123 0038 0391     		str	r1, [sp, #12]
 157:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 124              		.loc 1 157 3 is_stmt 1 view .LVU28
 157:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 125              		.loc 1 157 36 is_stmt 0 view .LVU29
 126 003a 0491     		str	r1, [sp, #16]
 158:Src/main.c    **** 
 127              		.loc 1 158 3 is_stmt 1 view .LVU30
 158:Src/main.c    **** 
 128              		.loc 1 158 36 is_stmt 0 view .LVU31
 129 003c 0591     		str	r1, [sp, #20]
 160:Src/main.c    ****   {
 130              		.loc 1 160 3 is_stmt 1 view .LVU32
 160:Src/main.c    ****   {
 131              		.loc 1 160 7 is_stmt 0 view .LVU33
 132 003e 01A8     		add	r0, sp, #4
 133 0040 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 134              	.LVL2:
 160:Src/main.c    ****   {
 135              		.loc 1 160 6 discriminator 1 view .LVU34
 136 0044 18B9     		cbnz	r0, .L8
 164:Src/main.c    **** 
 137              		.loc 1 164 1 view .LVU35
 138 0046 10B0     		add	sp, sp, #64
 139              	.LCFI2:
 140              		.cfi_remember_state
 141              		.cfi_def_cfa_offset 8
 142              		@ sp needed
 143 0048 10BD     		pop	{r4, pc}
 144              	.L7:
 145              	.LCFI3:
 146              		.cfi_restore_state
 148:Src/main.c    ****   }
 147              		.loc 1 148 5 is_stmt 1 view .LVU36
 148 004a FFF7FEFF 		bl	Error_Handler
 149              	.LVL3:
 150              	.L8:
 162:Src/main.c    ****   }
 151              		.loc 1 162 5 view .LVU37
 152 004e FFF7FEFF 		bl	Error_Handler
 153              	.LVL4:
 154              		.cfi_endproc
 155              	.LFE69:
 157              		.section	.text.main,"ax",%progbits
 158              		.align	1
 159              		.global	main
 160              		.syntax unified
 161              		.thumb
 162              		.thumb_func
ARM GAS  /tmp/ccU8bNwg.s 			page 10


 164              	main:
 165              	.LFB68:
  74:Src/main.c    **** 
 166              		.loc 1 74 1 view -0
 167              		.cfi_startproc
 168              		@ Volatile: function does not return.
 169              		@ args = 0, pretend = 0, frame = 0
 170              		@ frame_needed = 0, uses_anonymous_args = 0
 171 0000 08B5     		push	{r3, lr}
 172              	.LCFI4:
 173              		.cfi_def_cfa_offset 8
 174              		.cfi_offset 3, -8
 175              		.cfi_offset 14, -4
  83:Src/main.c    **** 
 176              		.loc 1 83 3 view .LVU39
 177 0002 FFF7FEFF 		bl	HAL_Init
 178              	.LVL5:
  92:Src/main.c    **** 
 179              		.loc 1 92 3 view .LVU40
 180 0006 FFF7FEFF 		bl	SystemClock_Config
 181              	.LVL6:
  99:Src/main.c    ****   MX_USART1_UART_Init();
 182              		.loc 1 99 3 view .LVU41
 183 000a FFF7FEFF 		bl	MX_GPIO_Init
 184              	.LVL7:
 100:Src/main.c    ****   MX_I2C1_Init();
 185              		.loc 1 100 3 view .LVU42
 186 000e FFF7FEFF 		bl	MX_USART1_UART_Init
 187              	.LVL8:
 101:Src/main.c    ****   MX_I2C2_Init();
 188              		.loc 1 101 3 view .LVU43
 189 0012 FFF7FEFF 		bl	MX_I2C1_Init
 190              	.LVL9:
 102:Src/main.c    ****   MX_TIM2_Init();
 191              		.loc 1 102 3 view .LVU44
 192 0016 FFF7FEFF 		bl	MX_I2C2_Init
 193              	.LVL10:
 103:Src/main.c    ****   /* USER CODE BEGIN 2 */
 194              		.loc 1 103 3 view .LVU45
 195 001a FFF7FEFF 		bl	MX_TIM2_Init
 196              	.LVL11:
 106:Src/main.c    **** 	  /* USER CODE END 2 */
 197              		.loc 1 106 3 view .LVU46
 198 001e FFF7FEFF 		bl	test_init
 199              	.LVL12:
 200              	.L10:
 111:Src/main.c    ****   {
 201              		.loc 1 111 3 view .LVU47
 116:Src/main.c    ****       HAL_Delay(100);
 202              		.loc 1 116 7 view .LVU48
 203 0022 FFF7FEFF 		bl	buzzer_test
 204              	.LVL13:
 117:Src/main.c    ****       led_test();
 205              		.loc 1 117 7 view .LVU49
 206 0026 6420     		movs	r0, #100
 207 0028 FFF7FEFF 		bl	HAL_Delay
 208              	.LVL14:
ARM GAS  /tmp/ccU8bNwg.s 			page 11


 118:Src/main.c    ****       HAL_Delay(100);
 209              		.loc 1 118 7 view .LVU50
 210 002c FFF7FEFF 		bl	led_test
 211              	.LVL15:
 119:Src/main.c    ****       button_test();
 212              		.loc 1 119 7 view .LVU51
 213 0030 6420     		movs	r0, #100
 214 0032 FFF7FEFF 		bl	HAL_Delay
 215              	.LVL16:
 120:Src/main.c    ****       HAL_Delay(100);
 216              		.loc 1 120 7 view .LVU52
 217 0036 FFF7FEFF 		bl	button_test
 218              	.LVL17:
 121:Src/main.c    ****       ds1307_test();
 219              		.loc 1 121 7 view .LVU53
 220 003a 6420     		movs	r0, #100
 221 003c FFF7FEFF 		bl	HAL_Delay
 222              	.LVL18:
 122:Src/main.c    ****       HAL_Delay(100);
 223              		.loc 1 122 7 view .LVU54
 224 0040 FFF7FEFF 		bl	ds1307_test
 225              	.LVL19:
 123:Src/main.c    ****       mpu6050_test();
 226              		.loc 1 123 7 view .LVU55
 227 0044 6420     		movs	r0, #100
 228 0046 FFF7FEFF 		bl	HAL_Delay
 229              	.LVL20:
 124:Src/main.c    ****       HAL_Delay(100);
 230              		.loc 1 124 7 view .LVU56
 231 004a FFF7FEFF 		bl	mpu6050_test
 232              	.LVL21:
 125:Src/main.c    ****   }
 233              		.loc 1 125 7 discriminator 1 view .LVU57
 234 004e 6420     		movs	r0, #100
 235 0050 FFF7FEFF 		bl	HAL_Delay
 236              	.LVL22:
 111:Src/main.c    ****   {
 237              		.loc 1 111 9 view .LVU58
 238 0054 E5E7     		b	.L10
 239              		.cfi_endproc
 240              	.LFE68:
 242              		.text
 243              	.Letext0:
 244              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 245              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 246              		.file 5 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 247              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 248              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 249              		.file 8 "Inc/test.h"
 250              		.file 9 "Inc/tim.h"
 251              		.file 10 "Inc/i2c.h"
 252              		.file 11 "Inc/usart.h"
 253              		.file 12 "Inc/gpio.h"
 254              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 255              		.file 14 "<built-in>"
ARM GAS  /tmp/ccU8bNwg.s 			page 12


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/ccU8bNwg.s:19     .text.Error_Handler:00000000 $t
     /tmp/ccU8bNwg.s:25     .text.Error_Handler:00000000 Error_Handler
     /tmp/ccU8bNwg.s:57     .text.SystemClock_Config:00000000 $t
     /tmp/ccU8bNwg.s:63     .text.SystemClock_Config:00000000 SystemClock_Config
     /tmp/ccU8bNwg.s:158    .text.main:00000000 $t
     /tmp/ccU8bNwg.s:164    .text.main:00000000 main

UNDEFINED SYMBOLS
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_USART1_UART_Init
MX_I2C1_Init
MX_I2C2_Init
MX_TIM2_Init
test_init
buzzer_test
HAL_Delay
led_test
button_test
ds1307_test
mpu6050_test
