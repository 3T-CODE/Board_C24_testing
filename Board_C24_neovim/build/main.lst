ARM GAS  /tmp/ccc9nuRd.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Src/main.c"
  18              		.section	.text.test_led,"ax",%progbits
  19              		.align	1
  20              		.global	test_led
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	test_led:
  26              	.LFB70:
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * Copyright (c) 2024 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Src/main.c    ****   * in the root directory of this software component.
  14:Src/main.c    ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Src/main.c    ****   *
  16:Src/main.c    ****   ******************************************************************************
  17:Src/main.c    ****   */
  18:Src/main.c    **** /* USER CODE END Header */
  19:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  20:Src/main.c    **** #include "main.h"
  21:Src/main.c    **** #include "i2c.h"
  22:Src/main.c    **** #include "tim.h"
  23:Src/main.c    **** #include "usart.h"
  24:Src/main.c    **** #include "gpio.h"
  25:Src/main.c    **** 
  26:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  27:Src/main.c    **** /* USER CODE BEGIN Includes */
  28:Src/main.c    **** #include<stdio.h>
  29:Src/main.c    **** #include<stdint.h>
  30:Src/main.c    **** #include<string.h>
  31:Src/main.c    **** #include "ds1307_for_stm32_hal.h"
  32:Src/main.c    **** #include "mpu6050.h" 
ARM GAS  /tmp/ccc9nuRd.s 			page 2


  33:Src/main.c    **** /* USER CODE END Includes */
  34:Src/main.c    **** 
  35:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  36:Src/main.c    **** /* USER CODE BEGIN PTD */
  37:Src/main.c    **** 
  38:Src/main.c    **** /* USER CODE END PTD */
  39:Src/main.c    **** 
  40:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  41:Src/main.c    **** /* USER CODE BEGIN PD */
  42:Src/main.c    **** 
  43:Src/main.c    **** /* USER CODE END PD */
  44:Src/main.c    **** 
  45:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  46:Src/main.c    **** /* USER CODE BEGIN PM */
  47:Src/main.c    **** 
  48:Src/main.c    **** /* USER CODE END PM */
  49:Src/main.c    **** 
  50:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  51:Src/main.c    **** 
  52:Src/main.c    **** /* USER CODE BEGIN PV */
  53:Src/main.c    **** const char *DAYS_OF_WEEK[7] = { "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "
  54:Src/main.c    **** 	uint8_t date = 0;
  55:Src/main.c    **** 	uint8_t	month = 0;
  56:Src/main.c    **** 	uint16_t year = 0;
  57:Src/main.c    **** 	uint8_t	dow = 0;
  58:Src/main.c    **** 	uint8_t	hour = 0;
  59:Src/main.c    **** 	uint8_t	minute = 0;
  60:Src/main.c    **** 	uint8_t	second = 0;
  61:Src/main.c    **** 	uint8_t	zone_hr = 0;
  62:Src/main.c    **** 	uint8_t	zone_min = 0;
  63:Src/main.c    **** 	char ds_buffer[100] = { 0 };
  64:Src/main.c    **** MPU6050_t MPU6050;
  65:Src/main.c    **** /* USER CODE END PV */
  66:Src/main.c    **** 
  67:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  68:Src/main.c    **** void SystemClock_Config(void);
  69:Src/main.c    **** /* USER CODE BEGIN PFP */
  70:Src/main.c    **** void test_led();
  71:Src/main.c    **** void test_ds1307();
  72:Src/main.c    **** void button_test();
  73:Src/main.c    **** void buzzer_test();
  74:Src/main.c    **** void mpu6050_test();
  75:Src/main.c    **** /* USER CODE END PFP */
  76:Src/main.c    **** 
  77:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  78:Src/main.c    **** /* USER CODE BEGIN 0 */
  79:Src/main.c    **** 
  80:Src/main.c    **** /* USER CODE END 0 */
  81:Src/main.c    **** 
  82:Src/main.c    **** /**
  83:Src/main.c    ****   * @brief  The application entry point.
  84:Src/main.c    ****   * @retval int
  85:Src/main.c    ****   */
  86:Src/main.c    **** int main(void)
  87:Src/main.c    **** {
  88:Src/main.c    **** 
  89:Src/main.c    ****   /* USER CODE BEGIN 1 */
ARM GAS  /tmp/ccc9nuRd.s 			page 3


  90:Src/main.c    **** 
  91:Src/main.c    ****   /* USER CODE END 1 */
  92:Src/main.c    **** 
  93:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  94:Src/main.c    **** 
  95:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  96:Src/main.c    ****   HAL_Init();
  97:Src/main.c    **** 
  98:Src/main.c    ****   /* USER CODE BEGIN Init */
  99:Src/main.c    ****     /*DS1307_Init(&hi2c1);*/
 100:Src/main.c    ****   /* To test leap year correction. */
 101:Src/main.c    ****    	DS1307_SetTimeZone(+8, 00);
 102:Src/main.c    ****    	DS1307_SetDate(29);
 103:Src/main.c    ****    	DS1307_SetMonth(2);
 104:Src/main.c    ****    	DS1307_SetYear(2024);
 105:Src/main.c    ****    	DS1307_SetDayOfWeek(4);
 106:Src/main.c    ****    	DS1307_SetHour(23);
 107:Src/main.c    ****    	DS1307_SetMinute(59);
 108:Src/main.c    ****    	DS1307_SetSecond(30);
 109:Src/main.c    ****     
 110:Src/main.c    ****     HAL_TIM_PWM_Start(&htim2 , TIM_CHANNEL_1);
 111:Src/main.c    ****   /* USER CODE END Init */
 112:Src/main.c    **** 
 113:Src/main.c    ****   /* Configure the system clock */
 114:Src/main.c    ****   SystemClock_Config();
 115:Src/main.c    **** 
 116:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 117:Src/main.c    **** 
 118:Src/main.c    ****   /* USER CODE END SysInit */
 119:Src/main.c    **** 
 120:Src/main.c    ****   /* Initialize all configured peripherals */
 121:Src/main.c    ****   MX_GPIO_Init();
 122:Src/main.c    ****   MX_USART1_UART_Init();
 123:Src/main.c    ****   MX_I2C1_Init();
 124:Src/main.c    ****   MX_I2C2_Init();
 125:Src/main.c    ****   MX_TIM2_Init();
 126:Src/main.c    ****   /* USER CODE BEGIN 2 */
 127:Src/main.c    ****   /*while (MPU6050_Init(&hi2c2) == 1);*/ //Uncomment when use MPU6050 
 128:Src/main.c    ****   DS1307_Init(&hi2c2);
 129:Src/main.c    ****   	/* To test leap year correction. */
 130:Src/main.c    **** 	DS1307_SetTimeZone(+8, 00);
 131:Src/main.c    **** 	DS1307_SetDate(18);
 132:Src/main.c    **** 	DS1307_SetMonth(8);
 133:Src/main.c    **** 	DS1307_SetYear(2024);
 134:Src/main.c    **** 	DS1307_SetDayOfWeek(7);
 135:Src/main.c    **** 	DS1307_SetHour(1);
 136:Src/main.c    **** 	DS1307_SetMinute(1);
 137:Src/main.c    **** 	DS1307_SetSecond(30);
 138:Src/main.c    ****   /* USER CODE END 2 */
 139:Src/main.c    **** 
 140:Src/main.c    ****   /* Infinite loop */
 141:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 142:Src/main.c    ****   while (1)
 143:Src/main.c    ****   {
 144:Src/main.c    ****     /* USER CODE END WHILE */
 145:Src/main.c    **** 
 146:Src/main.c    ****     /* USER CODE BEGIN 3 */
ARM GAS  /tmp/ccc9nuRd.s 			page 4


 147:Src/main.c    **** 
 148:Src/main.c    ****       test_led();
 149:Src/main.c    ****       test_ds1307();
 150:Src/main.c    ****  	 	  HAL_Delay (100);
 151:Src/main.c    ****   }
 152:Src/main.c    ****   /* USER CODE END 3 */
 153:Src/main.c    **** }
 154:Src/main.c    **** 
 155:Src/main.c    **** /**
 156:Src/main.c    ****   * @brief System Clock Configuration
 157:Src/main.c    ****   * @retval None
 158:Src/main.c    ****   */
 159:Src/main.c    **** void SystemClock_Config(void)
 160:Src/main.c    **** {
 161:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 162:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 163:Src/main.c    **** 
 164:Src/main.c    ****   /** Initializes the RCC Oscillators according to the specified parameters
 165:Src/main.c    ****   * in the RCC_OscInitTypeDef structure.
 166:Src/main.c    ****   */
 167:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 168:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 169:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 170:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 171:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 172:Src/main.c    ****   {
 173:Src/main.c    ****     Error_Handler();
 174:Src/main.c    ****   }
 175:Src/main.c    **** 
 176:Src/main.c    ****   /** Initializes the CPU, AHB and APB buses clocks
 177:Src/main.c    ****   */
 178:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 179:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 180:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 181:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 182:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 183:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 184:Src/main.c    **** 
 185:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 186:Src/main.c    ****   {
 187:Src/main.c    ****     Error_Handler();
 188:Src/main.c    ****   }
 189:Src/main.c    **** }
 190:Src/main.c    **** 
 191:Src/main.c    **** /* USER CODE BEGIN 4 */
 192:Src/main.c    **** 
 193:Src/main.c    **** /*Test code*/
 194:Src/main.c    **** void test_led()
 195:Src/main.c    **** {
  27              		.loc 1 195 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 38B5     		push	{r3, r4, r5, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 16
  34              		.cfi_offset 3, -16
ARM GAS  /tmp/ccc9nuRd.s 			page 5


  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
 196:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOC,GPIO_PIN_13);
  38              		.loc 1 196 5 view .LVU1
  39 0002 4FF40051 		mov	r1, #8192
  40 0006 2148     		ldr	r0, .L3
  41 0008 FFF7FEFF 		bl	HAL_GPIO_TogglePin
  42              	.LVL0:
 197:Src/main.c    ****     HAL_Delay(100);
  43              		.loc 1 197 5 view .LVU2
  44 000c 6420     		movs	r0, #100
  45 000e FFF7FEFF 		bl	HAL_Delay
  46              	.LVL1:
 198:Src/main.c    ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3 ,SET);
  47              		.loc 1 198 5 view .LVU3
  48 0012 1F4C     		ldr	r4, .L3+4
  49 0014 0122     		movs	r2, #1
  50 0016 0821     		movs	r1, #8
  51 0018 2046     		mov	r0, r4
  52 001a FFF7FEFF 		bl	HAL_GPIO_WritePin
  53              	.LVL2:
 199:Src/main.c    ****     HAL_GPIO_WritePin(GPIOB,GPIO_PIN_4,RESET);
  54              		.loc 1 199 5 view .LVU4
  55 001e 0022     		movs	r2, #0
  56 0020 1021     		movs	r1, #16
  57 0022 2046     		mov	r0, r4
  58 0024 FFF7FEFF 		bl	HAL_GPIO_WritePin
  59              	.LVL3:
 200:Src/main.c    ****     HAL_GPIO_WritePin(GPIOA,GPIO_PIN_15,RESET);
  60              		.loc 1 200 5 view .LVU5
  61 0028 1A4D     		ldr	r5, .L3+8
  62 002a 0022     		movs	r2, #0
  63 002c 4FF40041 		mov	r1, #32768
  64 0030 2846     		mov	r0, r5
  65 0032 FFF7FEFF 		bl	HAL_GPIO_WritePin
  66              	.LVL4:
 201:Src/main.c    ****     HAL_Delay(100);
  67              		.loc 1 201 5 view .LVU6
  68 0036 6420     		movs	r0, #100
  69 0038 FFF7FEFF 		bl	HAL_Delay
  70              	.LVL5:
 202:Src/main.c    ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3 ,SET);
  71              		.loc 1 202 5 view .LVU7
  72 003c 0122     		movs	r2, #1
  73 003e 0821     		movs	r1, #8
  74 0040 2046     		mov	r0, r4
  75 0042 FFF7FEFF 		bl	HAL_GPIO_WritePin
  76              	.LVL6:
 203:Src/main.c    ****     HAL_GPIO_WritePin(GPIOB,GPIO_PIN_4,SET);
  77              		.loc 1 203 5 view .LVU8
  78 0046 0122     		movs	r2, #1
  79 0048 1021     		movs	r1, #16
  80 004a 2046     		mov	r0, r4
  81 004c FFF7FEFF 		bl	HAL_GPIO_WritePin
  82              	.LVL7:
 204:Src/main.c    ****     HAL_GPIO_WritePin(GPIOA,GPIO_PIN_15,RESET);
ARM GAS  /tmp/ccc9nuRd.s 			page 6


  83              		.loc 1 204 5 view .LVU9
  84 0050 0022     		movs	r2, #0
  85 0052 4FF40041 		mov	r1, #32768
  86 0056 2846     		mov	r0, r5
  87 0058 FFF7FEFF 		bl	HAL_GPIO_WritePin
  88              	.LVL8:
 205:Src/main.c    ****     HAL_Delay(100);
  89              		.loc 1 205 5 view .LVU10
  90 005c 6420     		movs	r0, #100
  91 005e FFF7FEFF 		bl	HAL_Delay
  92              	.LVL9:
 206:Src/main.c    ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_3 ,SET);
  93              		.loc 1 206 5 view .LVU11
  94 0062 0122     		movs	r2, #1
  95 0064 0821     		movs	r1, #8
  96 0066 2046     		mov	r0, r4
  97 0068 FFF7FEFF 		bl	HAL_GPIO_WritePin
  98              	.LVL10:
 207:Src/main.c    ****     HAL_GPIO_WritePin(GPIOB,GPIO_PIN_4,RESET);
  99              		.loc 1 207 5 view .LVU12
 100 006c 0022     		movs	r2, #0
 101 006e 1021     		movs	r1, #16
 102 0070 2046     		mov	r0, r4
 103 0072 FFF7FEFF 		bl	HAL_GPIO_WritePin
 104              	.LVL11:
 208:Src/main.c    ****     HAL_GPIO_WritePin(GPIOA,GPIO_PIN_15,SET);
 105              		.loc 1 208 5 view .LVU13
 106 0076 0122     		movs	r2, #1
 107 0078 4FF40041 		mov	r1, #32768
 108 007c 2846     		mov	r0, r5
 109 007e FFF7FEFF 		bl	HAL_GPIO_WritePin
 110              	.LVL12:
 209:Src/main.c    ****     HAL_Delay(100);
 111              		.loc 1 209 5 view .LVU14
 112 0082 6420     		movs	r0, #100
 113 0084 FFF7FEFF 		bl	HAL_Delay
 114              	.LVL13:
 210:Src/main.c    **** 
 211:Src/main.c    **** }
 115              		.loc 1 211 1 is_stmt 0 view .LVU15
 116 0088 38BD     		pop	{r3, r4, r5, pc}
 117              	.L4:
 118 008a 00BF     		.align	2
 119              	.L3:
 120 008c 00100140 		.word	1073811456
 121 0090 000C0140 		.word	1073810432
 122 0094 00080140 		.word	1073809408
 123              		.cfi_endproc
 124              	.LFE70:
 126              		.section	.rodata.test_ds1307.str1.4,"aMS",%progbits,1
 127              		.align	2
 128              	.LC0:
 129 0000 49534F38 		.ascii	"ISO8601 FORMAT: %04d-%02d-%02dT%02d:%02d:%02d%+03d:"
 129      36303120 
 129      464F524D 
 129      41543A20 
 129      25303464 
ARM GAS  /tmp/ccc9nuRd.s 			page 7


 130 0033 25303264 		.ascii	"%02d \012 \015\000"
 130      200A200D 
 130      00
 131              		.section	.text.test_ds1307,"ax",%progbits
 132              		.align	1
 133              		.global	test_ds1307
 134              		.syntax unified
 135              		.thumb
 136              		.thumb_func
 138              	test_ds1307:
 139              	.LFB71:
 212:Src/main.c    **** 
 213:Src/main.c    **** void test_ds1307()
 214:Src/main.c    **** {
 140              		.loc 1 214 1 is_stmt 1 view -0
 141              		.cfi_startproc
 142              		@ args = 0, pretend = 0, frame = 0
 143              		@ frame_needed = 0, uses_anonymous_args = 0
 144 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 145              	.LCFI1:
 146              		.cfi_def_cfa_offset 36
 147              		.cfi_offset 4, -36
 148              		.cfi_offset 5, -32
 149              		.cfi_offset 6, -28
 150              		.cfi_offset 7, -24
 151              		.cfi_offset 8, -20
 152              		.cfi_offset 9, -16
 153              		.cfi_offset 10, -12
 154              		.cfi_offset 11, -8
 155              		.cfi_offset 14, -4
 156 0004 87B0     		sub	sp, sp, #28
 157              	.LCFI2:
 158              		.cfi_def_cfa_offset 64
 215:Src/main.c    ****     /*Ds1307*/
 216:Src/main.c    ****     uint8_t date = DS1307_GetDate();
 159              		.loc 1 216 5 view .LVU17
 160              		.loc 1 216 20 is_stmt 0 view .LVU18
 161 0006 FFF7FEFF 		bl	DS1307_GetDate
 162              	.LVL14:
 163 000a 0746     		mov	r7, r0
 164              	.LVL15:
 217:Src/main.c    ****    	uint8_t month = DS1307_GetMonth();
 165              		.loc 1 217 5 is_stmt 1 view .LVU19
 166              		.loc 1 217 21 is_stmt 0 view .LVU20
 167 000c FFF7FEFF 		bl	DS1307_GetMonth
 168              	.LVL16:
 169 0010 0646     		mov	r6, r0
 170              	.LVL17:
 218:Src/main.c    ****    	uint16_t year = DS1307_GetYear();
 171              		.loc 1 218 5 is_stmt 1 view .LVU21
 172              		.loc 1 218 21 is_stmt 0 view .LVU22
 173 0012 FFF7FEFF 		bl	DS1307_GetYear
 174              	.LVL18:
 175 0016 0546     		mov	r5, r0
 176              	.LVL19:
 219:Src/main.c    ****    	uint8_t dow = DS1307_GetDayOfWeek();
 177              		.loc 1 219 5 is_stmt 1 view .LVU23
ARM GAS  /tmp/ccc9nuRd.s 			page 8


 178              		.loc 1 219 19 is_stmt 0 view .LVU24
 179 0018 FFF7FEFF 		bl	DS1307_GetDayOfWeek
 180              	.LVL20:
 220:Src/main.c    ****    	uint8_t hour = DS1307_GetHour();
 181              		.loc 1 220 5 is_stmt 1 view .LVU25
 182              		.loc 1 220 20 is_stmt 0 view .LVU26
 183 001c FFF7FEFF 		bl	DS1307_GetHour
 184              	.LVL21:
 185 0020 8046     		mov	r8, r0
 186              	.LVL22:
 221:Src/main.c    ****    	uint8_t minute = DS1307_GetMinute();
 187              		.loc 1 221 5 is_stmt 1 view .LVU27
 188              		.loc 1 221 22 is_stmt 0 view .LVU28
 189 0022 FFF7FEFF 		bl	DS1307_GetMinute
 190              	.LVL23:
 191 0026 8146     		mov	r9, r0
 192              	.LVL24:
 222:Src/main.c    ****    	uint8_t second = DS1307_GetSecond();
 193              		.loc 1 222 5 is_stmt 1 view .LVU29
 194              		.loc 1 222 22 is_stmt 0 view .LVU30
 195 0028 FFF7FEFF 		bl	DS1307_GetSecond
 196              	.LVL25:
 197 002c 8246     		mov	r10, r0
 198              	.LVL26:
 223:Src/main.c    ****    	int8_t zone_hr = DS1307_GetTimeZoneHour();
 199              		.loc 1 223 5 is_stmt 1 view .LVU31
 200              		.loc 1 223 22 is_stmt 0 view .LVU32
 201 002e FFF7FEFF 		bl	DS1307_GetTimeZoneHour
 202              	.LVL27:
 203 0032 8346     		mov	fp, r0
 204              	.LVL28:
 224:Src/main.c    ****    	uint8_t zone_min = DS1307_GetTimeZoneMin();
 205              		.loc 1 224 5 is_stmt 1 view .LVU33
 206              		.loc 1 224 24 is_stmt 0 view .LVU34
 207 0034 FFF7FEFF 		bl	DS1307_GetTimeZoneMin
 208              	.LVL29:
 225:Src/main.c    **** 		sprintf(ds_buffer, "ISO8601 FORMAT: %04d-%02d-%02dT%02d:%02d:%02d%+03d:%02d \n \r",
 209              		.loc 1 225 3 is_stmt 1 view .LVU35
 210 0038 0E4C     		ldr	r4, .L7
 211 003a 0590     		str	r0, [sp, #20]
 212 003c CDF810B0 		str	fp, [sp, #16]
 213 0040 CDF80CA0 		str	r10, [sp, #12]
 214 0044 CDF80890 		str	r9, [sp, #8]
 215 0048 CDF80480 		str	r8, [sp, #4]
 216 004c 0097     		str	r7, [sp]
 217 004e 3346     		mov	r3, r6
 218 0050 2A46     		mov	r2, r5
 219 0052 0949     		ldr	r1, .L7+4
 220 0054 2046     		mov	r0, r4
 221              	.LVL30:
 222              		.loc 1 225 3 is_stmt 0 view .LVU36
 223 0056 FFF7FEFF 		bl	sprintf
 224              	.LVL31:
 226:Src/main.c    **** 				    year, month, date, hour, minute, second, zone_hr, zone_min);
 227:Src/main.c    **** 		/* May show warning below. Ignore and proceed. */
 228:Src/main.c    ****     
 229:Src/main.c    **** 	  HAL_UART_Transmit(&huart1, ds_buffer, strlen(ds_buffer), 1000);
ARM GAS  /tmp/ccc9nuRd.s 			page 9


 225              		.loc 1 229 4 is_stmt 1 view .LVU37
 226              		.loc 1 229 42 is_stmt 0 view .LVU38
 227 005a 2046     		mov	r0, r4
 228 005c FFF7FEFF 		bl	strlen
 229              	.LVL32:
 230              		.loc 1 229 4 discriminator 1 view .LVU39
 231 0060 4FF47A73 		mov	r3, #1000
 232 0064 82B2     		uxth	r2, r0
 233 0066 2146     		mov	r1, r4
 234 0068 0448     		ldr	r0, .L7+8
 235 006a FFF7FEFF 		bl	HAL_UART_Transmit
 236              	.LVL33:
 230:Src/main.c    **** }
 237              		.loc 1 230 1 view .LVU40
 238 006e 07B0     		add	sp, sp, #28
 239              	.LCFI3:
 240              		.cfi_def_cfa_offset 36
 241              		@ sp needed
 242 0070 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 243              	.LVL34:
 244              	.L8:
 245              		.loc 1 230 1 view .LVU41
 246              		.align	2
 247              	.L7:
 248 0074 00000000 		.word	ds_buffer
 249 0078 00000000 		.word	.LC0
 250 007c 00000000 		.word	huart1
 251              		.cfi_endproc
 252              	.LFE71:
 254              		.section	.rodata.button_test.str1.4,"aMS",%progbits,1
 255              		.align	2
 256              	.LC1:
 257 0000 53746174 		.ascii	"State Button 1 = %d, State Button 2 = %d \012\015\000"
 257      65204275 
 257      74746F6E 
 257      2031203D 
 257      2025642C 
 258              		.section	.text.button_test,"ax",%progbits
 259              		.align	1
 260              		.global	button_test
 261              		.syntax unified
 262              		.thumb
 263              		.thumb_func
 265              	button_test:
 266              	.LFB72:
 231:Src/main.c    **** 
 232:Src/main.c    **** void button_test()
 233:Src/main.c    **** {
 267              		.loc 1 233 1 is_stmt 1 view -0
 268              		.cfi_startproc
 269              		@ args = 0, pretend = 0, frame = 56
 270              		@ frame_needed = 0, uses_anonymous_args = 0
 271 0000 30B5     		push	{r4, r5, lr}
 272              	.LCFI4:
 273              		.cfi_def_cfa_offset 12
 274              		.cfi_offset 4, -12
 275              		.cfi_offset 5, -8
ARM GAS  /tmp/ccc9nuRd.s 			page 10


 276              		.cfi_offset 14, -4
 277 0002 8FB0     		sub	sp, sp, #60
 278              	.LCFI5:
 279              		.cfi_def_cfa_offset 72
 234:Src/main.c    ****     uint8_t a,b;
 280              		.loc 1 234 5 view .LVU43
 235:Src/main.c    **** 	  a = HAL_GPIO_ReadPin(GPIOB , GPIO_PIN_8);
 281              		.loc 1 235 4 view .LVU44
 282              		.loc 1 235 8 is_stmt 0 view .LVU45
 283 0004 0D4D     		ldr	r5, .L11
 284 0006 4FF48071 		mov	r1, #256
 285 000a 2846     		mov	r0, r5
 286 000c FFF7FEFF 		bl	HAL_GPIO_ReadPin
 287              	.LVL35:
 288 0010 0446     		mov	r4, r0
 289              	.LVL36:
 236:Src/main.c    ****     b = HAL_GPIO_ReadPin(GPIOB,GPIO_PIN_9);
 290              		.loc 1 236 5 is_stmt 1 view .LVU46
 291              		.loc 1 236 9 is_stmt 0 view .LVU47
 292 0012 4FF40071 		mov	r1, #512
 293 0016 2846     		mov	r0, r5
 294 0018 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 295              	.LVL37:
 296 001c 0346     		mov	r3, r0
 297              	.LVL38:
 237:Src/main.c    ****     char buffer[50];
 298              		.loc 1 237 5 is_stmt 1 view .LVU48
 238:Src/main.c    ****     sprintf(buffer , "State Button 1 = %d, State Button 2 = %d \n\r" , a , b);
 299              		.loc 1 238 5 view .LVU49
 300 001e 01AD     		add	r5, sp, #4
 301 0020 2246     		mov	r2, r4
 302 0022 0749     		ldr	r1, .L11+4
 303 0024 2846     		mov	r0, r5
 304 0026 FFF7FEFF 		bl	sprintf
 305              	.LVL39:
 239:Src/main.c    ****     HAL_UART_Transmit(&huart1 ,buffer ,50 ,100);
 306              		.loc 1 239 5 view .LVU50
 307 002a 6423     		movs	r3, #100
 308 002c 3222     		movs	r2, #50
 309 002e 2946     		mov	r1, r5
 310 0030 0448     		ldr	r0, .L11+8
 311 0032 FFF7FEFF 		bl	HAL_UART_Transmit
 312              	.LVL40:
 240:Src/main.c    **** 
 241:Src/main.c    **** }
 313              		.loc 1 241 1 is_stmt 0 view .LVU51
 314 0036 0FB0     		add	sp, sp, #60
 315              	.LCFI6:
 316              		.cfi_def_cfa_offset 12
 317              		@ sp needed
 318 0038 30BD     		pop	{r4, r5, pc}
 319              	.LVL41:
 320              	.L12:
 321              		.loc 1 241 1 view .LVU52
 322 003a 00BF     		.align	2
 323              	.L11:
 324 003c 000C0140 		.word	1073810432
ARM GAS  /tmp/ccc9nuRd.s 			page 11


 325 0040 00000000 		.word	.LC1
 326 0044 00000000 		.word	huart1
 327              		.cfi_endproc
 328              	.LFE72:
 330              		.section	.text.buzzer_test,"ax",%progbits
 331              		.align	1
 332              		.global	buzzer_test
 333              		.syntax unified
 334              		.thumb
 335              		.thumb_func
 337              	buzzer_test:
 338              	.LFB73:
 242:Src/main.c    **** 
 243:Src/main.c    **** void buzzer_test()
 244:Src/main.c    **** {
 339              		.loc 1 244 1 is_stmt 1 view -0
 340              		.cfi_startproc
 341              		@ args = 0, pretend = 0, frame = 0
 342              		@ frame_needed = 0, uses_anonymous_args = 0
 343              		@ link register save eliminated.
 245:Src/main.c    ****     TIM2 -> CCR1 = 50;
 344              		.loc 1 245 5 view .LVU54
 345              		.loc 1 245 18 is_stmt 0 view .LVU55
 346 0000 4FF08043 		mov	r3, #1073741824
 347 0004 3222     		movs	r2, #50
 348 0006 5A63     		str	r2, [r3, #52]
 246:Src/main.c    **** 
 247:Src/main.c    **** }
 349              		.loc 1 247 1 view .LVU56
 350 0008 7047     		bx	lr
 351              		.cfi_endproc
 352              	.LFE73:
 354              		.section	.text.mpu6050_test,"ax",%progbits
 355              		.align	1
 356              		.global	mpu6050_test
 357              		.syntax unified
 358              		.thumb
 359              		.thumb_func
 361              	mpu6050_test:
 362              	.LFB74:
 248:Src/main.c    **** 
 249:Src/main.c    **** void mpu6050_test()
 250:Src/main.c    **** {
 363              		.loc 1 250 1 is_stmt 1 view -0
 364              		.cfi_startproc
 365              		@ args = 0, pretend = 0, frame = 0
 366              		@ frame_needed = 0, uses_anonymous_args = 0
 367 0000 08B5     		push	{r3, lr}
 368              	.LCFI7:
 369              		.cfi_def_cfa_offset 8
 370              		.cfi_offset 3, -8
 371              		.cfi_offset 14, -4
 251:Src/main.c    ****     MPU6050_Read_All(&hi2c2, &MPU6050);
 372              		.loc 1 251 5 view .LVU58
 373 0002 0249     		ldr	r1, .L16
 374 0004 0248     		ldr	r0, .L16+4
 375 0006 FFF7FEFF 		bl	MPU6050_Read_All
ARM GAS  /tmp/ccc9nuRd.s 			page 12


 376              	.LVL42:
 252:Src/main.c    ****     float Ax , Ay , Az ,Gx ,Gy ,Gz ;
 377              		.loc 1 252 5 view .LVU59
 253:Src/main.c    ****     Ax = MPU6050.Ax;
 378              		.loc 1 253 5 view .LVU60
 254:Src/main.c    ****     Ay = MPU6050.Ay;
 379              		.loc 1 254 5 view .LVU61
 255:Src/main.c    ****     Az = MPU6050.Az;
 380              		.loc 1 255 5 view .LVU62
 256:Src/main.c    ****     Gx = MPU6050.Gx;
 381              		.loc 1 256 5 view .LVU63
 257:Src/main.c    ****     Gy = MPU6050.Gy;
 382              		.loc 1 257 5 view .LVU64
 258:Src/main.c    ****     Gz = MPU6050.Gz;
 383              		.loc 1 258 5 view .LVU65
 259:Src/main.c    **** 
 260:Src/main.c    **** 
 261:Src/main.c    **** }
 384              		.loc 1 261 1 is_stmt 0 view .LVU66
 385 000a 08BD     		pop	{r3, pc}
 386              	.L17:
 387              		.align	2
 388              	.L16:
 389 000c 00000000 		.word	MPU6050
 390 0010 00000000 		.word	hi2c2
 391              		.cfi_endproc
 392              	.LFE74:
 394              		.section	.text.Error_Handler,"ax",%progbits
 395              		.align	1
 396              		.global	Error_Handler
 397              		.syntax unified
 398              		.thumb
 399              		.thumb_func
 401              	Error_Handler:
 402              	.LFB75:
 262:Src/main.c    **** 
 263:Src/main.c    **** /* USER CODE END 4 */
 264:Src/main.c    **** 
 265:Src/main.c    **** /**
 266:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 267:Src/main.c    ****   * @retval None
 268:Src/main.c    ****   */
 269:Src/main.c    **** void Error_Handler(void)
 270:Src/main.c    **** {
 403              		.loc 1 270 1 is_stmt 1 view -0
 404              		.cfi_startproc
 405              		@ Volatile: function does not return.
 406              		@ args = 0, pretend = 0, frame = 0
 407              		@ frame_needed = 0, uses_anonymous_args = 0
 408              		@ link register save eliminated.
 271:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 272:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 273:Src/main.c    ****   __disable_irq();
 409              		.loc 1 273 3 view .LVU68
 410              	.LBB4:
 411              	.LBI4:
 412              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
ARM GAS  /tmp/ccc9nuRd.s 			page 13


   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccc9nuRd.s 			page 14


  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
ARM GAS  /tmp/ccc9nuRd.s 			page 15


 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 413              		.loc 2 140 27 view .LVU69
 414              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 415              		.loc 2 142 3 view .LVU70
 416              		.syntax unified
 417              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 418 0000 72B6     		cpsid i
 419              	@ 0 "" 2
 420              		.thumb
 421              		.syntax unified
 422              	.L19:
 423              	.LBE5:
 424              	.LBE4:
 274:Src/main.c    ****   while (1)
 425              		.loc 1 274 3 view .LVU71
 275:Src/main.c    ****   {
 276:Src/main.c    ****   }
 426              		.loc 1 276 3 view .LVU72
 274:Src/main.c    ****   while (1)
 427              		.loc 1 274 9 view .LVU73
 428 0002 FEE7     		b	.L19
 429              		.cfi_endproc
 430              	.LFE75:
 432              		.section	.text.SystemClock_Config,"ax",%progbits
 433              		.align	1
 434              		.global	SystemClock_Config
 435              		.syntax unified
 436              		.thumb
 437              		.thumb_func
 439              	SystemClock_Config:
ARM GAS  /tmp/ccc9nuRd.s 			page 16


 440              	.LFB69:
 160:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 441              		.loc 1 160 1 view -0
 442              		.cfi_startproc
 443              		@ args = 0, pretend = 0, frame = 64
 444              		@ frame_needed = 0, uses_anonymous_args = 0
 445 0000 10B5     		push	{r4, lr}
 446              	.LCFI8:
 447              		.cfi_def_cfa_offset 8
 448              		.cfi_offset 4, -8
 449              		.cfi_offset 14, -4
 450 0002 90B0     		sub	sp, sp, #64
 451              	.LCFI9:
 452              		.cfi_def_cfa_offset 72
 161:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 453              		.loc 1 161 3 view .LVU75
 161:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 454              		.loc 1 161 22 is_stmt 0 view .LVU76
 455 0004 06AC     		add	r4, sp, #24
 456 0006 2822     		movs	r2, #40
 457 0008 0021     		movs	r1, #0
 458 000a 2046     		mov	r0, r4
 459 000c FFF7FEFF 		bl	memset
 460              	.LVL43:
 162:Src/main.c    **** 
 461              		.loc 1 162 3 is_stmt 1 view .LVU77
 162:Src/main.c    **** 
 462              		.loc 1 162 22 is_stmt 0 view .LVU78
 463 0010 0023     		movs	r3, #0
 464 0012 0193     		str	r3, [sp, #4]
 465 0014 0293     		str	r3, [sp, #8]
 466 0016 0393     		str	r3, [sp, #12]
 467 0018 0493     		str	r3, [sp, #16]
 468 001a 0593     		str	r3, [sp, #20]
 167:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 469              		.loc 1 167 3 is_stmt 1 view .LVU79
 167:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 470              		.loc 1 167 36 is_stmt 0 view .LVU80
 471 001c 0223     		movs	r3, #2
 472 001e 0693     		str	r3, [sp, #24]
 168:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 473              		.loc 1 168 3 is_stmt 1 view .LVU81
 168:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 474              		.loc 1 168 30 is_stmt 0 view .LVU82
 475 0020 0123     		movs	r3, #1
 476 0022 0A93     		str	r3, [sp, #40]
 169:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 477              		.loc 1 169 3 is_stmt 1 view .LVU83
 169:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 478              		.loc 1 169 41 is_stmt 0 view .LVU84
 479 0024 1023     		movs	r3, #16
 480 0026 0B93     		str	r3, [sp, #44]
 170:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 481              		.loc 1 170 3 is_stmt 1 view .LVU85
 171:Src/main.c    ****   {
 482              		.loc 1 171 3 view .LVU86
 171:Src/main.c    ****   {
ARM GAS  /tmp/ccc9nuRd.s 			page 17


 483              		.loc 1 171 7 is_stmt 0 view .LVU87
 484 0028 2046     		mov	r0, r4
 485 002a FFF7FEFF 		bl	HAL_RCC_OscConfig
 486              	.LVL44:
 171:Src/main.c    ****   {
 487              		.loc 1 171 6 discriminator 1 view .LVU88
 488 002e 60B9     		cbnz	r0, .L24
 178:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 489              		.loc 1 178 3 is_stmt 1 view .LVU89
 178:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 490              		.loc 1 178 31 is_stmt 0 view .LVU90
 491 0030 0F23     		movs	r3, #15
 492 0032 0193     		str	r3, [sp, #4]
 180:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 493              		.loc 1 180 3 is_stmt 1 view .LVU91
 180:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 494              		.loc 1 180 34 is_stmt 0 view .LVU92
 495 0034 0021     		movs	r1, #0
 496 0036 0291     		str	r1, [sp, #8]
 181:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 497              		.loc 1 181 3 is_stmt 1 view .LVU93
 181:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 498              		.loc 1 181 35 is_stmt 0 view .LVU94
 499 0038 0391     		str	r1, [sp, #12]
 182:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 500              		.loc 1 182 3 is_stmt 1 view .LVU95
 182:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 501              		.loc 1 182 36 is_stmt 0 view .LVU96
 502 003a 0491     		str	r1, [sp, #16]
 183:Src/main.c    **** 
 503              		.loc 1 183 3 is_stmt 1 view .LVU97
 183:Src/main.c    **** 
 504              		.loc 1 183 36 is_stmt 0 view .LVU98
 505 003c 0591     		str	r1, [sp, #20]
 185:Src/main.c    ****   {
 506              		.loc 1 185 3 is_stmt 1 view .LVU99
 185:Src/main.c    ****   {
 507              		.loc 1 185 7 is_stmt 0 view .LVU100
 508 003e 01A8     		add	r0, sp, #4
 509 0040 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 510              	.LVL45:
 185:Src/main.c    ****   {
 511              		.loc 1 185 6 discriminator 1 view .LVU101
 512 0044 18B9     		cbnz	r0, .L25
 189:Src/main.c    **** 
 513              		.loc 1 189 1 view .LVU102
 514 0046 10B0     		add	sp, sp, #64
 515              	.LCFI10:
 516              		.cfi_remember_state
 517              		.cfi_def_cfa_offset 8
 518              		@ sp needed
 519 0048 10BD     		pop	{r4, pc}
 520              	.L24:
 521              	.LCFI11:
 522              		.cfi_restore_state
 173:Src/main.c    ****   }
 523              		.loc 1 173 5 is_stmt 1 view .LVU103
ARM GAS  /tmp/ccc9nuRd.s 			page 18


 524 004a FFF7FEFF 		bl	Error_Handler
 525              	.LVL46:
 526              	.L25:
 187:Src/main.c    ****   }
 527              		.loc 1 187 5 view .LVU104
 528 004e FFF7FEFF 		bl	Error_Handler
 529              	.LVL47:
 530              		.cfi_endproc
 531              	.LFE69:
 533              		.section	.text.main,"ax",%progbits
 534              		.align	1
 535              		.global	main
 536              		.syntax unified
 537              		.thumb
 538              		.thumb_func
 540              	main:
 541              	.LFB68:
  87:Src/main.c    **** 
 542              		.loc 1 87 1 view -0
 543              		.cfi_startproc
 544              		@ Volatile: function does not return.
 545              		@ args = 0, pretend = 0, frame = 0
 546              		@ frame_needed = 0, uses_anonymous_args = 0
 547 0000 08B5     		push	{r3, lr}
 548              	.LCFI12:
 549              		.cfi_def_cfa_offset 8
 550              		.cfi_offset 3, -8
 551              		.cfi_offset 14, -4
  96:Src/main.c    **** 
 552              		.loc 1 96 3 view .LVU106
 553 0002 FFF7FEFF 		bl	HAL_Init
 554              	.LVL48:
 101:Src/main.c    ****    	DS1307_SetDate(29);
 555              		.loc 1 101 5 view .LVU107
 556 0006 0021     		movs	r1, #0
 557 0008 0820     		movs	r0, #8
 558 000a FFF7FEFF 		bl	DS1307_SetTimeZone
 559              	.LVL49:
 102:Src/main.c    ****    	DS1307_SetMonth(2);
 560              		.loc 1 102 5 view .LVU108
 561 000e 1D20     		movs	r0, #29
 562 0010 FFF7FEFF 		bl	DS1307_SetDate
 563              	.LVL50:
 103:Src/main.c    ****    	DS1307_SetYear(2024);
 564              		.loc 1 103 5 view .LVU109
 565 0014 0220     		movs	r0, #2
 566 0016 FFF7FEFF 		bl	DS1307_SetMonth
 567              	.LVL51:
 104:Src/main.c    ****    	DS1307_SetDayOfWeek(4);
 568              		.loc 1 104 5 view .LVU110
 569 001a 4FF4FD60 		mov	r0, #2024
 570 001e FFF7FEFF 		bl	DS1307_SetYear
 571              	.LVL52:
 105:Src/main.c    ****    	DS1307_SetHour(23);
 572              		.loc 1 105 5 view .LVU111
 573 0022 0420     		movs	r0, #4
 574 0024 FFF7FEFF 		bl	DS1307_SetDayOfWeek
ARM GAS  /tmp/ccc9nuRd.s 			page 19


 575              	.LVL53:
 106:Src/main.c    ****    	DS1307_SetMinute(59);
 576              		.loc 1 106 5 view .LVU112
 577 0028 1720     		movs	r0, #23
 578 002a FFF7FEFF 		bl	DS1307_SetHour
 579              	.LVL54:
 107:Src/main.c    ****    	DS1307_SetSecond(30);
 580              		.loc 1 107 5 view .LVU113
 581 002e 3B20     		movs	r0, #59
 582 0030 FFF7FEFF 		bl	DS1307_SetMinute
 583              	.LVL55:
 108:Src/main.c    ****     
 584              		.loc 1 108 5 view .LVU114
 585 0034 1E20     		movs	r0, #30
 586 0036 FFF7FEFF 		bl	DS1307_SetSecond
 587              	.LVL56:
 110:Src/main.c    ****   /* USER CODE END Init */
 588              		.loc 1 110 5 view .LVU115
 589 003a 0021     		movs	r1, #0
 590 003c 1948     		ldr	r0, .L29
 591 003e FFF7FEFF 		bl	HAL_TIM_PWM_Start
 592              	.LVL57:
 114:Src/main.c    **** 
 593              		.loc 1 114 3 view .LVU116
 594 0042 FFF7FEFF 		bl	SystemClock_Config
 595              	.LVL58:
 121:Src/main.c    ****   MX_USART1_UART_Init();
 596              		.loc 1 121 3 view .LVU117
 597 0046 FFF7FEFF 		bl	MX_GPIO_Init
 598              	.LVL59:
 122:Src/main.c    ****   MX_I2C1_Init();
 599              		.loc 1 122 3 view .LVU118
 600 004a FFF7FEFF 		bl	MX_USART1_UART_Init
 601              	.LVL60:
 123:Src/main.c    ****   MX_I2C2_Init();
 602              		.loc 1 123 3 view .LVU119
 603 004e FFF7FEFF 		bl	MX_I2C1_Init
 604              	.LVL61:
 124:Src/main.c    ****   MX_TIM2_Init();
 605              		.loc 1 124 3 view .LVU120
 606 0052 FFF7FEFF 		bl	MX_I2C2_Init
 607              	.LVL62:
 125:Src/main.c    ****   /* USER CODE BEGIN 2 */
 608              		.loc 1 125 3 view .LVU121
 609 0056 FFF7FEFF 		bl	MX_TIM2_Init
 610              	.LVL63:
 128:Src/main.c    ****   	/* To test leap year correction. */
 611              		.loc 1 128 3 view .LVU122
 612 005a 1348     		ldr	r0, .L29+4
 613 005c FFF7FEFF 		bl	DS1307_Init
 614              	.LVL64:
 130:Src/main.c    **** 	DS1307_SetDate(18);
 615              		.loc 1 130 2 view .LVU123
 616 0060 0021     		movs	r1, #0
 617 0062 0820     		movs	r0, #8
 618 0064 FFF7FEFF 		bl	DS1307_SetTimeZone
 619              	.LVL65:
ARM GAS  /tmp/ccc9nuRd.s 			page 20


 131:Src/main.c    **** 	DS1307_SetMonth(8);
 620              		.loc 1 131 2 view .LVU124
 621 0068 1220     		movs	r0, #18
 622 006a FFF7FEFF 		bl	DS1307_SetDate
 623              	.LVL66:
 132:Src/main.c    **** 	DS1307_SetYear(2024);
 624              		.loc 1 132 2 view .LVU125
 625 006e 0820     		movs	r0, #8
 626 0070 FFF7FEFF 		bl	DS1307_SetMonth
 627              	.LVL67:
 133:Src/main.c    **** 	DS1307_SetDayOfWeek(7);
 628              		.loc 1 133 2 view .LVU126
 629 0074 4FF4FD60 		mov	r0, #2024
 630 0078 FFF7FEFF 		bl	DS1307_SetYear
 631              	.LVL68:
 134:Src/main.c    **** 	DS1307_SetHour(1);
 632              		.loc 1 134 2 view .LVU127
 633 007c 0720     		movs	r0, #7
 634 007e FFF7FEFF 		bl	DS1307_SetDayOfWeek
 635              	.LVL69:
 135:Src/main.c    **** 	DS1307_SetMinute(1);
 636              		.loc 1 135 2 view .LVU128
 637 0082 0120     		movs	r0, #1
 638 0084 FFF7FEFF 		bl	DS1307_SetHour
 639              	.LVL70:
 136:Src/main.c    **** 	DS1307_SetSecond(30);
 640              		.loc 1 136 2 view .LVU129
 641 0088 0120     		movs	r0, #1
 642 008a FFF7FEFF 		bl	DS1307_SetMinute
 643              	.LVL71:
 137:Src/main.c    ****   /* USER CODE END 2 */
 644              		.loc 1 137 2 view .LVU130
 645 008e 1E20     		movs	r0, #30
 646 0090 FFF7FEFF 		bl	DS1307_SetSecond
 647              	.LVL72:
 648              	.L27:
 142:Src/main.c    ****   {
 649              		.loc 1 142 3 view .LVU131
 148:Src/main.c    ****       test_ds1307();
 650              		.loc 1 148 7 view .LVU132
 651 0094 FFF7FEFF 		bl	test_led
 652              	.LVL73:
 149:Src/main.c    ****  	 	  HAL_Delay (100);
 653              		.loc 1 149 7 view .LVU133
 654 0098 FFF7FEFF 		bl	test_ds1307
 655              	.LVL74:
 150:Src/main.c    ****   }
 656              		.loc 1 150 7 discriminator 1 view .LVU134
 657 009c 6420     		movs	r0, #100
 658 009e FFF7FEFF 		bl	HAL_Delay
 659              	.LVL75:
 142:Src/main.c    ****   {
 660              		.loc 1 142 9 view .LVU135
 661 00a2 F7E7     		b	.L27
 662              	.L30:
 663              		.align	2
 664              	.L29:
ARM GAS  /tmp/ccc9nuRd.s 			page 21


 665 00a4 00000000 		.word	htim2
 666 00a8 00000000 		.word	hi2c2
 667              		.cfi_endproc
 668              	.LFE68:
 670              		.global	MPU6050
 671              		.section	.bss.MPU6050,"aw",%nobits
 672              		.align	3
 675              	MPU6050:
 676 0000 00000000 		.space	88
 676      00000000 
 676      00000000 
 676      00000000 
 676      00000000 
 677              		.global	ds_buffer
 678              		.section	.bss.ds_buffer,"aw",%nobits
 679              		.align	2
 682              	ds_buffer:
 683 0000 00000000 		.space	100
 683      00000000 
 683      00000000 
 683      00000000 
 683      00000000 
 684              		.global	zone_min
 685              		.section	.bss.zone_min,"aw",%nobits
 688              	zone_min:
 689 0000 00       		.space	1
 690              		.global	zone_hr
 691              		.section	.bss.zone_hr,"aw",%nobits
 694              	zone_hr:
 695 0000 00       		.space	1
 696              		.global	second
 697              		.section	.bss.second,"aw",%nobits
 700              	second:
 701 0000 00       		.space	1
 702              		.global	minute
 703              		.section	.bss.minute,"aw",%nobits
 706              	minute:
 707 0000 00       		.space	1
 708              		.global	hour
 709              		.section	.bss.hour,"aw",%nobits
 712              	hour:
 713 0000 00       		.space	1
 714              		.global	dow
 715              		.section	.bss.dow,"aw",%nobits
 718              	dow:
 719 0000 00       		.space	1
 720              		.global	year
 721              		.section	.bss.year,"aw",%nobits
 722              		.align	1
 725              	year:
 726 0000 0000     		.space	2
 727              		.global	month
 728              		.section	.bss.month,"aw",%nobits
 731              	month:
 732 0000 00       		.space	1
 733              		.global	date
 734              		.section	.bss.date,"aw",%nobits
ARM GAS  /tmp/ccc9nuRd.s 			page 22


 737              	date:
 738 0000 00       		.space	1
 739              		.global	DAYS_OF_WEEK
 740              		.section	.rodata.str1.4,"aMS",%progbits,1
 741              		.align	2
 742              	.LC2:
 743 0000 53756E64 		.ascii	"Sunday\000"
 743      617900
 744 0007 00       		.align	2
 745              	.LC3:
 746 0008 4D6F6E64 		.ascii	"Monday\000"
 746      617900
 747 000f 00       		.align	2
 748              	.LC4:
 749 0010 54756573 		.ascii	"Tuesday\000"
 749      64617900 
 750              		.align	2
 751              	.LC5:
 752 0018 5765646E 		.ascii	"Wednesday\000"
 752      65736461 
 752      7900
 753 0022 0000     		.align	2
 754              	.LC6:
 755 0024 54687572 		.ascii	"Thursday\000"
 755      73646179 
 755      00
 756 002d 000000   		.align	2
 757              	.LC7:
 758 0030 46726964 		.ascii	"Friday\000"
 758      617900
 759 0037 00       		.align	2
 760              	.LC8:
 761 0038 53617475 		.ascii	"Saturday\000"
 761      72646179 
 761      00
 762              		.section	.data.DAYS_OF_WEEK,"aw"
 763              		.align	2
 766              	DAYS_OF_WEEK:
 767 0000 00000000 		.word	.LC2
 768 0004 08000000 		.word	.LC3
 769 0008 10000000 		.word	.LC4
 770 000c 18000000 		.word	.LC5
 771 0010 24000000 		.word	.LC6
 772 0014 30000000 		.word	.LC7
 773 0018 38000000 		.word	.LC8
 774              		.text
 775              	.Letext0:
 776              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 777              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 778              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 779              		.file 6 "/usr/lib/gcc/arm-none-eabi/14.1.0/include/stddef.h"
 780              		.file 7 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 781              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 782              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 783              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 784              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 785              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
ARM GAS  /tmp/ccc9nuRd.s 			page 23


 786              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_i2c.h"
 787              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 788              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 789              		.file 16 "Inc/i2c.h"
 790              		.file 17 "Inc/tim.h"
 791              		.file 18 "Inc/usart.h"
 792              		.file 19 "Inc/mpu6050.h"
 793              		.file 20 "/usr/arm-none-eabi/include/string.h"
 794              		.file 21 "/usr/arm-none-eabi/include/stdio.h"
 795              		.file 22 "Inc/ds1307_for_stm32_hal.h"
 796              		.file 23 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 797              		.file 24 "Inc/gpio.h"
 798              		.file 25 "<built-in>"
ARM GAS  /tmp/ccc9nuRd.s 			page 24


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/ccc9nuRd.s:19     .text.test_led:00000000 $t
     /tmp/ccc9nuRd.s:25     .text.test_led:00000000 test_led
     /tmp/ccc9nuRd.s:120    .text.test_led:0000008c $d
     /tmp/ccc9nuRd.s:127    .rodata.test_ds1307.str1.4:00000000 $d
     /tmp/ccc9nuRd.s:132    .text.test_ds1307:00000000 $t
     /tmp/ccc9nuRd.s:138    .text.test_ds1307:00000000 test_ds1307
     /tmp/ccc9nuRd.s:248    .text.test_ds1307:00000074 $d
     /tmp/ccc9nuRd.s:682    .bss.ds_buffer:00000000 ds_buffer
     /tmp/ccc9nuRd.s:255    .rodata.button_test.str1.4:00000000 $d
     /tmp/ccc9nuRd.s:259    .text.button_test:00000000 $t
     /tmp/ccc9nuRd.s:265    .text.button_test:00000000 button_test
     /tmp/ccc9nuRd.s:324    .text.button_test:0000003c $d
     /tmp/ccc9nuRd.s:331    .text.buzzer_test:00000000 $t
     /tmp/ccc9nuRd.s:337    .text.buzzer_test:00000000 buzzer_test
     /tmp/ccc9nuRd.s:355    .text.mpu6050_test:00000000 $t
     /tmp/ccc9nuRd.s:361    .text.mpu6050_test:00000000 mpu6050_test
     /tmp/ccc9nuRd.s:389    .text.mpu6050_test:0000000c $d
     /tmp/ccc9nuRd.s:675    .bss.MPU6050:00000000 MPU6050
     /tmp/ccc9nuRd.s:395    .text.Error_Handler:00000000 $t
     /tmp/ccc9nuRd.s:401    .text.Error_Handler:00000000 Error_Handler
     /tmp/ccc9nuRd.s:433    .text.SystemClock_Config:00000000 $t
     /tmp/ccc9nuRd.s:439    .text.SystemClock_Config:00000000 SystemClock_Config
     /tmp/ccc9nuRd.s:534    .text.main:00000000 $t
     /tmp/ccc9nuRd.s:540    .text.main:00000000 main
     /tmp/ccc9nuRd.s:665    .text.main:000000a4 $d
     /tmp/ccc9nuRd.s:672    .bss.MPU6050:00000000 $d
     /tmp/ccc9nuRd.s:679    .bss.ds_buffer:00000000 $d
     /tmp/ccc9nuRd.s:688    .bss.zone_min:00000000 zone_min
     /tmp/ccc9nuRd.s:689    .bss.zone_min:00000000 $d
     /tmp/ccc9nuRd.s:694    .bss.zone_hr:00000000 zone_hr
     /tmp/ccc9nuRd.s:695    .bss.zone_hr:00000000 $d
     /tmp/ccc9nuRd.s:700    .bss.second:00000000 second
     /tmp/ccc9nuRd.s:701    .bss.second:00000000 $d
     /tmp/ccc9nuRd.s:706    .bss.minute:00000000 minute
     /tmp/ccc9nuRd.s:707    .bss.minute:00000000 $d
     /tmp/ccc9nuRd.s:712    .bss.hour:00000000 hour
     /tmp/ccc9nuRd.s:713    .bss.hour:00000000 $d
     /tmp/ccc9nuRd.s:718    .bss.dow:00000000 dow
     /tmp/ccc9nuRd.s:719    .bss.dow:00000000 $d
     /tmp/ccc9nuRd.s:725    .bss.year:00000000 year
     /tmp/ccc9nuRd.s:722    .bss.year:00000000 $d
     /tmp/ccc9nuRd.s:731    .bss.month:00000000 month
     /tmp/ccc9nuRd.s:732    .bss.month:00000000 $d
     /tmp/ccc9nuRd.s:737    .bss.date:00000000 date
     /tmp/ccc9nuRd.s:738    .bss.date:00000000 $d
     /tmp/ccc9nuRd.s:766    .data.DAYS_OF_WEEK:00000000 DAYS_OF_WEEK
     /tmp/ccc9nuRd.s:741    .rodata.str1.4:00000000 $d
     /tmp/ccc9nuRd.s:763    .data.DAYS_OF_WEEK:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_TogglePin
HAL_Delay
HAL_GPIO_WritePin
DS1307_GetDate
DS1307_GetMonth
ARM GAS  /tmp/ccc9nuRd.s 			page 25


DS1307_GetYear
DS1307_GetDayOfWeek
DS1307_GetHour
DS1307_GetMinute
DS1307_GetSecond
DS1307_GetTimeZoneHour
DS1307_GetTimeZoneMin
sprintf
strlen
HAL_UART_Transmit
huart1
HAL_GPIO_ReadPin
MPU6050_Read_All
hi2c2
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
DS1307_SetTimeZone
DS1307_SetDate
DS1307_SetMonth
DS1307_SetYear
DS1307_SetDayOfWeek
DS1307_SetHour
DS1307_SetMinute
DS1307_SetSecond
HAL_TIM_PWM_Start
MX_GPIO_Init
MX_USART1_UART_Init
MX_I2C1_Init
MX_I2C2_Init
MX_TIM2_Init
DS1307_Init
htim2
